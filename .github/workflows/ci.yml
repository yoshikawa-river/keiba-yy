name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: keiba_user
          POSTGRES_PASSWORD: keiba_password
          POSTGRES_DB: keiba_ai_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.15"
    
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-
    
    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements.txt
        uv pip install -r requirements-dev.txt
    
    - name: Set up test database
      env:
        DATABASE_URL: postgresql://keiba_user:keiba_password@localhost:5432/keiba_ai_test
      run: |
        uv run alembic upgrade head
    
    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://keiba_user:keiba_password@localhost:5432/keiba_ai_test
        PYTHONPATH: ${{ github.workspace }}
      run: |
        uv run pytest tests/ -v --cov=src --cov-report=xml --cov-report=html --cov-report=term
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload coverage HTML report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.15"
    
    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements-dev.txt
    
    - name: Run ruff check
      run: |
        uv run ruff check src/ tests/ --fix
    
    - name: Run ruff format check
      run: |
        uv run ruff format --check src/ tests/
    
    - name: Run mypy
      run: |
        uv run mypy src/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'