name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'
  UV_VERSION: '0.4.15'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: ${{ env.UV_VERSION }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-build-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-uv-build-

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements.txt
        uv pip install -r requirements-dev.txt

    - name: Build package
      run: |
        echo "::group::Building package"
        uv pip install build
        uv run python -m build
        echo "::endgroup::"

    - name: Check package
      run: |
        echo "::group::Checking package with twine"
        uv pip install twine
        uv run twine check dist/*
        echo "::endgroup::"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Build Docker image
      run: |
        echo "::group::Building Docker image"
        docker build -t keiba-ai:${{ github.sha }} -f docker/python/Dockerfile .
        echo "::endgroup::"

    - name: Test Docker image
      run: |
        echo "::group::Testing Docker image"
        docker run --rm keiba-ai:${{ github.sha }} python --version
        docker run --rm keiba-ai:${{ github.sha }} pip list
        echo "::endgroup::"

    - name: Generate build info
      run: |
        echo "## Build Information" > build-info.md
        echo "" >> build-info.md
        echo "- **Commit:** ${{ github.sha }}" >> build-info.md
        echo "- **Branch:** ${{ github.ref_name }}" >> build-info.md
        echo "- **Python:** ${{ env.PYTHON_VERSION }}" >> build-info.md
        echo "- **Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> build-info.md
        echo "" >> build-info.md
        echo "### Package Contents" >> build-info.md
        ls -la dist/ >> build-info.md

    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: build-info
        path: build-info.md
