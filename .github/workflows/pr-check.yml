name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  size-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check PR size
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const { additions, deletions } = pr;
          const totalChanges = additions + deletions;
          
          if (totalChanges > 1000) {
            core.warning(`This PR contains ${totalChanges} changes. Consider breaking it into smaller PRs.`);
          }
          
          console.log(`PR size: +${additions} -${deletions}`);

  test-coverage-diff:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: keiba_ai_test
          MYSQL_USER: keiba_user
          MYSQL_PASSWORD: keiba_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 3306:3306
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.15"
    
    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements.txt
        uv pip install -r requirements-dev.txt
    
    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h localhost -u keiba_user -pkeiba_password --silent; then
            break
          fi
          echo "Waiting for MySQL..."
          sleep 2
        done
    
    - name: Set up test database
      env:
        DATABASE_URL: mysql+pymysql://keiba_user:keiba_password@localhost:3306/keiba_ai_test?charset=utf8mb4
      run: |
        uv run alembic upgrade head
    
    - name: Run tests with coverage on PR branch
      env:
        DATABASE_URL: mysql+pymysql://keiba_user:keiba_password@localhost:3306/keiba_ai_test?charset=utf8mb4
        PYTHONPATH: ${{ github.workspace }}
      run: |
        uv run pytest tests/ -v --cov=src --cov-report=json:coverage-pr.json
    
    - name: Checkout base branch
      run: |
        git checkout ${{ github.event.pull_request.base.sha }}
    
    - name: Run tests with coverage on base branch
      env:
        DATABASE_URL: mysql+pymysql://keiba_user:keiba_password@localhost:3306/keiba_ai_test?charset=utf8mb4
        PYTHONPATH: ${{ github.workspace }}
      run: |
        # ベースブランチのテストが失敗しても続行（カバレッジ比較のため）
        # ただし、失敗を記録する
        if ! uv run pytest tests/ -v --cov=src --cov-report=json:coverage-base.json; then
          echo "BASE_TESTS_FAILED=true" >> $GITHUB_ENV
          echo "::warning::Base branch tests failed - coverage comparison may be inaccurate"
        fi
    
    - name: Compare coverage
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let prCoverage = 0;
          let baseCoverage = 0;
          
          try {
            const prData = JSON.parse(fs.readFileSync('coverage-pr.json', 'utf8'));
            prCoverage = prData.totals.percent_covered;
          } catch (e) {
            console.log('Could not read PR coverage data');
          }
          
          try {
            const baseData = JSON.parse(fs.readFileSync('coverage-base.json', 'utf8'));
            baseCoverage = baseData.totals.percent_covered;
          } catch (e) {
            console.log('Could not read base coverage data');
          }
          
          const diff = prCoverage - baseCoverage;
          const emoji = diff >= 0 ? '✅' : '❌';
          const sign = diff >= 0 ? '+' : '';
          
          const comment = `## Coverage Report ${emoji}
          
          | Branch | Coverage |
          |--------|----------|
          | Base   | ${baseCoverage.toFixed(2)}% |
          | PR     | ${prCoverage.toFixed(2)}% |
          | Diff   | ${sign}${diff.toFixed(2)}% |
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  check-migrations:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: keiba_ai_test
          MYSQL_USER: keiba_user
          MYSQL_PASSWORD: keiba_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 3306:3306
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.15"
    
    - name: Install dependencies
      run: |
        uv venv
        uv pip install -r requirements.txt
    
    - name: Check for migration conflicts
      env:
        DATABASE_URL: mysql+pymysql://keiba_user:keiba_password@localhost:3306/keiba_ai_test?charset=utf8mb4
      run: |
        uv run alembic upgrade head
        uv run alembic check